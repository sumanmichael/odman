name: Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run tests
      run: uv run pytest
      continue-on-error: true  # Remove this when you have tests

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Install commitizen
      run: uv tool install commitizen
    
    - name: Create bump and changelog
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        uv tool run cz bump --changelog --yes
        git push --follow-tags origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Get version
      id: get_version
      run: echo "version=$(uv tool run cz version --project)" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        tag: v${{ steps.get_version.outputs.version }}
        name: Release v${{ steps.get_version.outputs.version }}
        bodyFile: "CHANGELOG.md"
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
